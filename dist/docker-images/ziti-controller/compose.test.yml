volumes:
  ziti-login:

services:
  ziti-controller:
    network_mode: host
    networks: !override []
    ports: !override []

  quickstart-test:
    profiles:
      - test
    depends_on:
      ziti-login:
        condition: service_completed_successfully
      ziti-router:
        condition: service_healthy
    image: golang:${ZITI_GO_VERSION:-noop}-alpine
    # networks:
    #   - quickstart
    # run as the same user as the host, so we can use the host's GOCACHE
    user: ${ZIGGY_UID:-2171}
    network_mode: host
    volumes:
      # mount the parent dir of the quickstart, which is the top-level of the ziti repo working copy, as /mnt, so we can
      # run the tests in the "edge" Go package
      - ../../../:/mnt
      # re-run tests if significant changes from last result in GOCACHE
      - ${GOCACHE:-${HOME}/.cache/go-build}:/.cache/go-build
      # re-download dep packages if significant changes from last download in GOPATH
      - ${GOPATH:-${HOME}/go}:/go
    working_dir: /mnt
    environment:
      # verbose, tests tagged 'quickstart && manual', manual means test an existing network, don't run a network inside
      # the test process
      GOFLAGS: "-tags=quickstart,manual"
      GOCACHE: /.cache/go-build
      GOPATH: /go
      ZITI_PWD:  # default "admin"
      ZITI_CTRL_ADVERTISED_ADDRESS: ${ZITI_CTRL_ADVERTISED_ADDRESS:-quickstart}
      ZITI_CTRL_EDGE_ADVERTISED_ADDRESS: ${ZITI_CTRL_ADVERTISED_ADDRESS:-quickstart}  # deprecated by ZITI_CTRL_ADVERTISED_ADDRESS
      ZITI_CTRL_EDGE_ADVERTISED_PORT: ${ZITI_CTRL_ADVERTISED_PORT:-1280}  # deprecated by ZITI_CTRL_ADVERTISED_PORT
      ZITI_CTRL_ADVERTISED_PORT: ${ZITI_CTRL_ADVERTISED_PORT:-1280}
      ZITI_ROUTER_ADVERTISED_ADDRESS: ${ZITI_CTRL_ADVERTISED_ADDRESS:-quickstart}
      ZITI_ROUTER_PORT: ${ZITI_ROUTER_PORT:-3022}
      ZITI_ROUTER_NAME: ${ZITI_ROUTER_NAME:-quickstart-router}
    command: go test -v ./ziti/cmd/edge/...

  chown-login:
    profiles:
      - test
    image: busybox
    command: chown -R ${ZIGGY_UID:-2171} /ziti-login
    volumes:
      - ziti-login:/ziti-login

  ziti-login:
    profiles:
      - test
    depends_on:
      ziti-controller:
        condition: service_healthy
      chown-login:
        condition: service_completed_successfully
    image: ${ZITI_CONTROLLER_IMAGE:-docker.io/openziti/ziti-controller}
    # run as the same user as the host, so we can write in ~/.config/ziti
    user: ${ZIGGY_UID:-2171}
    network_mode: host
    volumes:
      - ziti-controller:/ziti-controller
      - ziti-login:/home/ziggy/.config/ziti
    entrypoint:
      - bash
      - -euxc
      - |
        set -o pipefail
        ATTEMPTS=10
        DELAY=3
        until !((ATTEMPTS)) || ziti $${@}; do
          (( ATTEMPTS-- ))
          echo "Waiting for controller to start"
          sleep $${DELAY}
        done
    command: >
      -- edge login
      ${ZITI_CTRL_ADVERTISED_ADDRESS:-ziti-controller}:${ZITI_CTRL_ADVERTISED_PORT:-1280}
      --ca=/ziti-controller/pki/root/certs/root.cert
      --username=${ZITI_USER:-admin}
      --password=${ZITI_PWD:-admin}
      --timeout=1
      --verbose
